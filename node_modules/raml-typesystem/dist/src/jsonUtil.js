/// <reference path="../typings/main.d.ts" />
"use strict";
var JSONValidatorConstructor;
try {
    JSONValidatorConstructor = require("raml-json-validation").JSONValidator;
}
catch (exception) {
}
if (!JSONValidatorConstructor) {
    var JSONValidatorDummyImpl = (function () {
        function JSONValidatorDummyImpl() {
        }
        JSONValidatorDummyImpl.prototype.setRemoteReference = function (reference, content) {
        };
        JSONValidatorDummyImpl.prototype.validateSchema = function (jsonSchema) {
        };
        JSONValidatorDummyImpl.prototype.getMissingRemoteReferences = function () {
            return [];
        };
        JSONValidatorDummyImpl.prototype.isResourceLoaded = function (reference) {
            return true;
        };
        JSONValidatorDummyImpl.prototype.validate = function (content, schema) {
        };
        JSONValidatorDummyImpl.prototype.getLastErrors = function () {
            return [];
        };
        return JSONValidatorDummyImpl;
    }());
    JSONValidatorConstructor = JSONValidatorDummyImpl;
}
function getValidator() {
    return new JSONValidatorConstructor();
}
exports.getValidator = getValidator;
//# sourceMappingURL=jsonUtil.js.map