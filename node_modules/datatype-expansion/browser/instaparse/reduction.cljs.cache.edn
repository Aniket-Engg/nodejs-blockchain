;; Analyzed by ClojureScript 1.9.14
{:use-macros nil, :excludes #{}, :name instaparse.reduction, :imports nil, :requires {afs instaparse.auto-flatten-seq, instaparse.auto-flatten-seq instaparse.auto-flatten-seq}, :uses nil, :defs {raw-non-terminal-reduction {:name instaparse.reduction/raw-non-terminal-reduction, :file "browser/instaparse/reduction.cljs", :line 18, :column 1, :end-line 18, :end-column 32, :meta {:file "/Users/antoniogarrote/Development/raml-parser-toolbelt/tools/datatype-expansion/browser/instaparse/reduction.cljs", :line 18, :column 6, :end-line 18, :end-column 32}}, EnliveNonTerminalReduction {:protocol-inline nil, :meta {:file "/Users/antoniogarrote/Development/raml-parser-toolbelt/tools/datatype-expansion/browser/instaparse/reduction.cljs", :line 23, :column 7, :end-line 23, :end-column 33, :arglists (quote ([key]))}, :name instaparse.reduction/EnliveNonTerminalReduction, :variadic false, :file "browser/instaparse/reduction.cljs", :end-column 33, :method-params ([key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists (quote ([key]))}, singleton? {:protocol-inline nil, :meta {:file "/Users/antoniogarrote/Development/raml-parser-toolbelt/tools/datatype-expansion/browser/instaparse/reduction.cljs", :line 6, :column 7, :end-line 6, :end-column 17, :arglists (quote ([s]))}, :name instaparse.reduction/singleton?, :variadic false, :file "browser/instaparse/reduction.cljs", :end-column 17, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, HiccupNonTerminalReduction {:protocol-inline nil, :meta {:file "/Users/antoniogarrote/Development/raml-parser-toolbelt/tools/datatype-expansion/browser/instaparse/reduction.cljs", :line 20, :column 7, :end-line 20, :end-column 33, :arglists (quote ([key]))}, :name instaparse.reduction/HiccupNonTerminalReduction, :variadic false, :file "browser/instaparse/reduction.cljs", :end-column 33, :method-params ([key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([key]))}, standard-non-terminal-reduction {:name instaparse.reduction/standard-non-terminal-reduction, :file "browser/instaparse/reduction.cljs", :line 36, :column 1, :end-line 36, :end-column 37, :meta {:file "/Users/antoniogarrote/Development/raml-parser-toolbelt/tools/datatype-expansion/browser/instaparse/reduction.cljs", :line 36, :column 6, :end-line 36, :end-column 37}}, apply-reduction {:protocol-inline nil, :meta {:file "/Users/antoniogarrote/Development/raml-parser-toolbelt/tools/datatype-expansion/browser/instaparse/reduction.cljs", :line 38, :column 7, :end-line 38, :end-column 22, :arglists (quote ([f result]))}, :name instaparse.reduction/apply-reduction, :variadic false, :file "browser/instaparse/reduction.cljs", :end-column 22, :method-params ([f result]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f result]))}, apply-standard-reductions {:protocol-inline nil, :meta {:file "/Users/antoniogarrote/Development/raml-parser-toolbelt/tools/datatype-expansion/browser/instaparse/reduction.cljs", :line 47, :column 7, :end-line 47, :end-column 32, :arglists (quote ([grammar] [reduction-type grammar])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([grammar] [reduction-type grammar]), :arglists ([grammar] [reduction-type grammar]), :arglists-meta (nil nil)}}, :name instaparse.reduction/apply-standard-reductions, :variadic false, :file "browser/instaparse/reduction.cljs", :end-column 32, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([grammar] [reduction-type grammar]), :arglists ([grammar] [reduction-type grammar]), :arglists-meta (nil nil)}, :method-params ([grammar] [reduction-type grammar]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 2, :fn-var true, :arglists ([grammar] [reduction-type grammar])}, red {:protocol-inline nil, :meta {:file "/Users/antoniogarrote/Development/raml-parser-toolbelt/tools/datatype-expansion/browser/instaparse/reduction.cljs", :line 14, :column 7, :end-line 14, :end-column 10, :arglists (quote ([parser f]))}, :name instaparse.reduction/red, :variadic false, :file "browser/instaparse/reduction.cljs", :end-column 10, :method-params ([parser f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 2, :fn-var true, :arglists (quote ([parser f]))}, node-builders {:name instaparse.reduction/node-builders, :file "browser/instaparse/reduction.cljs", :line 30, :column 1, :end-line 30, :end-column 30, :constant true, :meta {:file "/Users/antoniogarrote/Development/raml-parser-toolbelt/tools/datatype-expansion/browser/instaparse/reduction.cljs", :line 30, :column 17, :end-line 30, :end-column 30, :constant true}}, reduction-types {:name instaparse.reduction/reduction-types, :file "browser/instaparse/reduction.cljs", :line 26, :column 1, :end-line 26, :end-column 32, :constant true, :meta {:file "/Users/antoniogarrote/Development/raml-parser-toolbelt/tools/datatype-expansion/browser/instaparse/reduction.cljs", :line 26, :column 17, :end-line 26, :end-column 32, :constant true}}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:key :content :raw :hiccup :enlive :red :reduction-type :tag}, :order [:red :reduction-type :raw :key :hiccup :enlive :tag :content]}, :doc nil}