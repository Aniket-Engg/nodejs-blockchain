;; Analyzed by ClojureScript 1.9.14
{:use-macros nil, :excludes #{}, :name datatype-expansion.utils-macros, :imports nil, :requires nil, :uses nil, :defs {maybe {:protocol-inline nil, :meta {:file "/Users/antoniogarrote/Development/raml-parser-toolbelt/tools/datatype-expansion/src/clj/datatype_expansion/utils_macros.cljc", :line 3, :column 11, :end-line 3, :end-column 16, :macro true, :arglists (quote ([f]))}, :name datatype-expansion.utils-macros/maybe, :variadic false, :file "src/clj/datatype_expansion/utils_macros.cljc", :end-column 16, :method-params ([&form &env f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 3, :macro true, :end-line 3, :max-fixed-arity 3, :fn-var true, :arglists (quote ([f]))}, check {:protocol-inline nil, :meta {:file "/Users/antoniogarrote/Development/raml-parser-toolbelt/tools/datatype-expansion/src/clj/datatype_expansion/utils_macros.cljc", :line 6, :column 11, :end-line 6, :end-column 16, :macro true, :arglists (quote ([name a b & fs])), :top-fn {:variadic true, :max-fixed-arity 5, :method-params [(&form &env name a b fs)], :arglists ([&form &env name a b & fs]), :arglists-meta (nil)}}, :name datatype-expansion.utils-macros/check, :variadic true, :file "src/clj/datatype_expansion/utils_macros.cljc", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 5, :method-params [(&form &env name a b fs)], :arglists ([&form &env name a b & fs]), :arglists-meta (nil)}, :method-params [(&form &env name a b fs)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 6, :macro true, :end-line 6, :max-fixed-arity 5, :fn-var true, :arglists ([&form &env name a b & fs])}}, :require-macros nil, :cljs.analyzer/constants {:seen #{cljs.core/some? cljs.core/str try e__15981__auto__ do if js/Error. cljs.core/and catch throw js/Error}, :order [try catch js/Error e__15981__auto__ if cljs.core/and cljs.core/some? do throw js/Error. cljs.core/str]}, :doc nil}