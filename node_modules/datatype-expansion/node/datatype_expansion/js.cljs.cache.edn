;; Analyzed by ClojureScript 1.9.14
{:use-macros {go cljs.core.async.macros}, :excludes #{}, :name datatype-expansion.js, :imports nil, :requires {expanded datatype-expansion.expanded-form, datatype-expansion.expanded-form datatype-expansion.expanded-form, canonical datatype-expansion.canonical-form, datatype-expansion.canonical-form datatype-expansion.canonical-form, cljs.core.async cljs.core.async, clojure.walk clojure.walk}, :uses {keywordize-keys clojure.walk, <! cljs.core.async}, :defs {expandedForm {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/src/clj/datatype_expansion/js.cljs", :line 10, :column 16, :end-line 10, :end-column 28, :export true, :arglists (quote ([type-form typing-context cb]))}, :name datatype-expansion.js/expandedForm, :variadic false, :file "src/clj/datatype_expansion/js.cljs", :end-column 28, :method-params ([type-form typing-context cb]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 3, :fn-var true, :arglists (quote ([type-form typing-context cb]))}, canonicalForm {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/src/clj/datatype_expansion/js.cljs", :line 26, :column 16, :end-line 26, :end-column 29, :export true, :arglists (quote ([expanded-form cb]))}, :name datatype-expansion.js/canonicalForm, :variadic false, :file "src/clj/datatype_expansion/js.cljs", :end-column 29, :method-params ([expanded-form cb]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 2, :fn-var true, :arglists (quote ([expanded-form cb]))}, -registerInterface {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/src/clj/datatype_expansion/js.cljs", :line 38, :column 7, :end-line 38, :end-column 25, :arglists (quote ([]))}, :name datatype-expansion.js/-registerInterface, :variadic false, :file "src/clj/datatype_expansion/js.cljs", :end-column 25, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:else}, :order [:else]}, :doc nil}