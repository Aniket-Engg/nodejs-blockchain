;; Analyzed by ClojureScript 1.9.14
{:use-macros {profile instaparse.gll-macros, swap-field! instaparse.gll-macros, dpprint instaparse.gll-macros, dprintln instaparse.gll-macros, success instaparse.gll-macros}, :excludes #{}, :name instaparse.gll, :imports nil, :requires {instaparse.combinators-source instaparse.combinators-source, afs instaparse.auto-flatten-seq, u goog.i18n.uChar, instaparse.print instaparse.print, instaparse.reduction instaparse.reduction, goog.i18n.uChar goog.i18n.uChar, instaparse.auto-flatten-seq instaparse.auto-flatten-seq, instaparse.failure instaparse.failure, print instaparse.print, fail instaparse.failure, red instaparse.reduction}, :uses {nt instaparse.combinators-source, Epsilon instaparse.combinators-source}, :defs {regexp-parse {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 575, :column 7, :end-line 575, :end-column 19, :arglists (quote ([this index tramp]))}, :name instaparse.gll/regexp-parse, :variadic false, :file "node/instaparse/gll.cljs", :end-column 19, :method-params ([this index tramp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 575, :end-line 575, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this index tramp]))}, text->segment {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 109, :column 7, :end-line 109, :end-column 20, :arglists (quote ([s])), :doc "Converts a string to a Segment, which has fast subsequencing"}, :name instaparse.gll/text->segment, :variadic false, :file "node/instaparse/gll.cljs", :end-column 20, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 109, :end-line 109, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "Converts a string to a Segment, which has fast subsequencing"}, string-case-insensitive-full-parse {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 516, :column 7, :end-line 516, :end-column 41, :arglists (quote ([this index tramp]))}, :name instaparse.gll/string-case-insensitive-full-parse, :variadic false, :file "node/instaparse/gll.cljs", :end-column 41, :method-params ([this index tramp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 516, :end-line 516, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this index tramp]))}, ISegment {:meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 31, :column 14, :end-line 31, :end-column 22, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {subsegment [[this start-index end-index-minus-one]], toString [[this]]}}}, :protocol-symbol true, :name instaparse.gll/ISegment, :file "node/instaparse/gll.cljs", :end-column 22, :column 1, :line 31, :protocol-info {:methods {subsegment [[this start-index end-index-minus-one]], toString [[this]]}}, :info nil, :end-line 31, :impls #{instaparse.gll/Segment}, :doc nil, :jsdoc ("@interface")}, RepFullListener {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 459, :column 7, :end-line 459, :end-column 22, :arglists (quote ([results-so-far parser m n prev-index node-key tramp]))}, :name instaparse.gll/RepFullListener, :variadic false, :file "node/instaparse/gll.cljs", :end-column 22, :method-params ([results-so-far parser m n prev-index node-key tramp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 459, :end-line 459, :max-fixed-arity 7, :fn-var true, :arglists (quote ([results-so-far parser m n prev-index node-key tramp]))}, result-exists? {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 192, :column 7, :end-line 192, :end-column 21, :arglists (quote ([tramp node-key])), :doc "Tests whether node has a result or full-result"}, :name instaparse.gll/result-exists?, :variadic false, :file "node/instaparse/gll.cljs", :end-column 21, :method-params ([tramp node-key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 192, :end-line 192, :max-fixed-arity 2, :fn-var true, :arglists (quote ([tramp node-key])), :doc "Tests whether node has a result or full-result"}, merge-meta {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 834, :column 7, :end-line 834, :end-column 17, :arglists (quote ([obj metamap])), :doc "A variation on with-meta that merges the existing metamap into the new metamap,\nrather than overwriting the metamap entirely."}, :name instaparse.gll/merge-meta, :variadic false, :file "node/instaparse/gll.cljs", :end-column 17, :method-params ([obj metamap]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 834, :end-line 834, :max-fixed-arity 2, :fn-var true, :arglists (quote ([obj metamap])), :doc "A variation on with-meta that merges the existing metamap into the new metamap,\nrather than overwriting the metamap entirely."}, make-success {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 138, :column 7, :end-line 138, :end-column 19, :arglists (quote ([result index]))}, :name instaparse.gll/make-success, :variadic false, :file "node/instaparse/gll.cljs", :end-column 19, :method-params ([result index]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 138, :end-line 138, :max-fixed-arity 2, :fn-var true, :arglists (quote ([result index]))}, listener-exists? {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 177, :column 7, :end-line 177, :end-column 23, :arglists (quote ([tramp node-key])), :doc "Tests whether node already has a listener"}, :name instaparse.gll/listener-exists?, :variadic false, :file "node/instaparse/gll.cljs", :end-column 23, :method-params ([tramp node-key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 177, :end-line 177, :max-fixed-arity 2, :fn-var true, :arglists (quote ([tramp node-key])), :doc "Tests whether node already has a listener"}, push-stack {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 154, :column 7, :end-line 154, :end-column 17, :arglists (quote ([tramp item])), :doc "Pushes an item onto the trampoline's stack"}, :name instaparse.gll/push-stack, :variadic false, :file "node/instaparse/gll.cljs", :end-column 17, :method-params ([tramp item]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 154, :end-line 154, :max-fixed-arity 2, :fn-var true, :arglists (quote ([tramp item])), :doc "Pushes an item onto the trampoline's stack"}, step {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 316, :column 7, :end-line 316, :end-column 11, :arglists (quote ([tramp])), :doc "Executes one thing on the stack (not threadsafe)"}, :name instaparse.gll/step, :variadic false, :file "node/instaparse/gll.cljs", :end-column 11, :method-params ([tramp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 316, :end-line 316, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tramp])), :doc "Executes one thing on the stack (not threadsafe)"}, negative-lookahead-parse {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 755, :column 7, :end-line 755, :end-column 31, :arglists (quote ([this index tramp]))}, :name instaparse.gll/negative-lookahead-parse, :variadic false, :file "node/instaparse/gll.cljs", :end-column 31, :method-params ([this index tramp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 755, :end-line 755, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this index tramp]))}, char-range-parse {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 527, :column 7, :end-line 527, :end-column 23, :arglists (quote ([this index tramp]))}, :name instaparse.gll/char-range-parse, :variadic false, :file "node/instaparse/gll.cljs", :end-column 23, :method-params ([this index tramp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 527, :end-line 527, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this index tramp]))}, NodeListener {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 368, :column 7, :end-line 368, :end-column 19, :arglists (quote ([node-key tramp]))}, :name instaparse.gll/NodeListener, :variadic false, :file "node/instaparse/gll.cljs", :end-column 19, :method-params ([node-key tramp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 368, :end-line 368, :max-fixed-arity 2, :fn-var true, :arglists (quote ([node-key tramp]))}, push-result {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 223, :column 7, :end-line 223, :end-column 18, :arglists (quote ([tramp node-key result])), :doc "Pushes a result into the trampoline's node.\n   Categorizes as either result or full-result.\n   Schedules notification to all existing listeners of result\n   (Full listeners only get notified about full results)"}, :name instaparse.gll/push-result, :variadic false, :file "node/instaparse/gll.cljs", :end-column 18, :method-params ([tramp node-key result]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 223, :end-line 223, :max-fixed-arity 3, :fn-var true, :arglists (quote ([tramp node-key result])), :doc "Pushes a result into the trampoline's node.\n   Categorizes as either result or full-result.\n   Schedules notification to all existing listeners of result\n   (Full listeners only get notified about full results)"}, ->Failure {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 101, :column 12, :end-line 101, :end-column 19, :internal-ctor true, :factory :positional, :arglists (quote ([index reason]))}, :name instaparse.gll/->Failure, :variadic false, :file "node/instaparse/gll.cljs", :end-column 19, :method-params ([index reason]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 101, :end-line 101, :max-fixed-arity 2, :fn-var true, :arglists (quote ([index reason]))}, non-terminal-full-parse {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 730, :column 7, :end-line 730, :end-column 30, :arglists (quote ([this index tramp]))}, :name instaparse.gll/non-terminal-full-parse, :variadic false, :file "node/instaparse/gll.cljs", :end-column 30, :method-params ([this index tramp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 730, :end-line 730, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this index tramp]))}, node-get {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 207, :column 7, :end-line 207, :end-column 15, :arglists (quote ([tramp node-key])), :doc "Gets node if already exists, otherwise creates one"}, :name instaparse.gll/node-get, :variadic false, :file "node/instaparse/gll.cljs", :end-column 15, :method-params ([tramp node-key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 207, :end-line 207, :max-fixed-arity 2, :fn-var true, :arglists (quote ([tramp node-key])), :doc "Gets node if already exists, otherwise creates one"}, rep-full-parse {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 642, :column 8, :end-line 642, :end-column 22, :arglists (quote ([this index tramp]))}, :name instaparse.gll/rep-full-parse, :variadic false, :file "node/instaparse/gll.cljs", :end-column 22, :method-params ([this index tramp]), :protocol-impl nil, :arglists-meta (nil nil), :column 2, :line 642, :end-line 642, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this index tramp]))}, PlusFullListener {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 432, :column 7, :end-line 432, :end-column 23, :arglists (quote ([results-so-far parser prev-index node-key tramp]))}, :name instaparse.gll/PlusFullListener, :variadic false, :file "node/instaparse/gll.cljs", :end-column 23, :method-params ([results-so-far parser prev-index node-key tramp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 432, :end-line 432, :max-fixed-arity 5, :fn-var true, :arglists (quote ([results-so-far parser prev-index node-key tramp]))}, equals-ignore-case {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 502, :column 7, :end-line 502, :end-column 25, :arglists (quote ([s1 s2]))}, :name instaparse.gll/equals-ignore-case, :variadic false, :file "node/instaparse/gll.cljs", :end-column 25, :method-params ([s1 s2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 502, :end-line 502, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s1 s2]))}, lookahead-parse {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 735, :column 7, :end-line 735, :end-column 22, :arglists (quote ([this index tramp]))}, :name instaparse.gll/lookahead-parse, :variadic false, :file "node/instaparse/gll.cljs", :end-column 22, :method-params ([this index tramp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 735, :end-line 735, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this index tramp]))}, push-message {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 160, :column 7, :end-line 160, :end-column 19, :arglists (quote ([tramp listener result])), :doc "Pushes onto stack a message to a given listener about a result"}, :name instaparse.gll/push-message, :variadic false, :file "node/instaparse/gll.cljs", :end-column 19, :method-params ([tramp listener result]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 160, :end-line 160, :max-fixed-arity 3, :fn-var true, :arglists (quote ([tramp listener result])), :doc "Pushes onto stack a message to a given listener about a result"}, parse-total-after-fail {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 852, :column 7, :end-line 852, :end-column 29, :arglists (quote ([grammar start text fail-index partial? node-builder]))}, :name instaparse.gll/parse-total-after-fail, :variadic false, :file "node/instaparse/gll.cljs", :end-column 29, :method-params ([grammar start text fail-index partial? node-builder]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 852, :end-line 852, :max-fixed-arity 6, :fn-var true, :arglists (quote ([grammar start text fail-index partial? node-builder]))}, Failure {:num-fields 2, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name instaparse.gll/Failure, :file "node/instaparse/gll.cljs", :end-column 19, :type true, :column 12, :internal-ctor true, :line 101, :record true, :end-line 101, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, CatFullListener {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 397, :column 7, :end-line 397, :end-column 22, :arglists (quote ([results-so-far parser-sequence node-key tramp]))}, :name instaparse.gll/CatFullListener, :variadic false, :file "node/instaparse/gll.cljs", :end-column 22, :method-params ([results-so-far parser-sequence node-key tramp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 397, :end-line 397, :max-fixed-arity 4, :fn-var true, :arglists (quote ([results-so-far parser-sequence node-key tramp]))}, run {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 324, :column 7, :end-line 324, :end-column 10, :arglists (quote ([tramp] [tramp found-result?])), :doc "Executes the stack until exhausted", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([tramp] [tramp found-result?]), :arglists ([tramp] [tramp found-result?]), :arglists-meta (nil nil)}}, :name instaparse.gll/run, :variadic false, :file "node/instaparse/gll.cljs", :end-column 10, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([tramp] [tramp found-result?]), :arglists ([tramp] [tramp found-result?]), :arglists-meta (nil nil)}, :method-params ([tramp] [tramp found-result?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 324, :end-line 324, :max-fixed-arity 2, :fn-var true, :arglists ([tramp] [tramp found-result?]), :doc "Executes the stack until exhausted"}, parses {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 790, :column 7, :end-line 790, :end-column 13, :arglists (quote ([grammar start text partial?]))}, :name instaparse.gll/parses, :variadic false, :file "node/instaparse/gll.cljs", :end-column 13, :method-params ([grammar start text partial?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 790, :end-line 790, :max-fixed-arity 4, :fn-var true, :arglists (quote ([grammar start text partial?]))}, ordered-alt-parse {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 685, :column 7, :end-line 685, :end-column 24, :arglists (quote ([this index tramp]))}, :name instaparse.gll/ordered-alt-parse, :variadic false, :file "node/instaparse/gll.cljs", :end-column 24, :method-params ([this index tramp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 685, :end-line 685, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this index tramp]))}, cat-parse {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 600, :column 8, :end-line 600, :end-column 17, :arglists (quote ([this index tramp]))}, :name instaparse.gll/cat-parse, :variadic false, :file "node/instaparse/gll.cljs", :end-column 17, :method-params ([this index tramp]), :protocol-impl nil, :arglists-meta (nil nil), :column 2, :line 600, :end-line 600, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this index tramp]))}, star-full-parse {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 663, :column 8, :end-line 663, :end-column 23, :arglists (quote ([this index tramp]))}, :name instaparse.gll/star-full-parse, :variadic false, :file "node/instaparse/gll.cljs", :end-column 23, :method-params ([this index tramp]), :protocol-impl nil, :arglists-meta (nil nil), :column 2, :line 663, :end-line 663, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this index tramp]))}, alt-full-parse {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 679, :column 7, :end-line 679, :end-column 21, :arglists (quote ([this index tramp]))}, :name instaparse.gll/alt-full-parse, :variadic false, :file "node/instaparse/gll.cljs", :end-column 21, :method-params ([this index tramp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 679, :end-line 679, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this index tramp]))}, epsilon-parse {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 774, :column 7, :end-line 774, :end-column 20, :arglists (quote ([this index tramp]))}, :name instaparse.gll/epsilon-parse, :variadic false, :file "node/instaparse/gll.cljs", :end-column 20, :method-params ([this index tramp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 774, :end-line 774, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this index tramp]))}, cat-full-parse {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 608, :column 8, :end-line 608, :end-column 22, :arglists (quote ([this index tramp]))}, :name instaparse.gll/cat-full-parse, :variadic false, :file "node/instaparse/gll.cljs", :end-column 22, :method-params ([this index tramp]), :protocol-impl nil, :arglists-meta (nil nil), :column 2, :line 608, :end-line 608, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this index tramp]))}, PlusListener {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 420, :column 7, :end-line 420, :end-column 19, :arglists (quote ([results-so-far parser prev-index node-key tramp]))}, :name instaparse.gll/PlusListener, :variadic false, :file "node/instaparse/gll.cljs", :end-column 19, :method-params ([results-so-far parser prev-index node-key tramp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 420, :end-line 420, :max-fixed-arity 5, :fn-var true, :arglists (quote ([results-so-far parser prev-index node-key tramp]))}, push-negative-listener {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 288, :column 7, :end-line 288, :end-column 29, :arglists (quote ([tramp creator negative-listener])), :doc "Pushes a thunk onto the trampoline's negative-listener stack."}, :name instaparse.gll/push-negative-listener, :variadic false, :file "node/instaparse/gll.cljs", :end-column 29, :method-params ([tramp creator negative-listener]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 288, :end-line 288, :max-fixed-arity 3, :fn-var true, :arglists (quote ([tramp creator negative-listener])), :doc "Pushes a thunk onto the trampoline's negative-listener stack."}, opt-parse {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 711, :column 7, :end-line 711, :end-column 16, :arglists (quote ([this index tramp]))}, :name instaparse.gll/opt-parse, :variadic false, :file "node/instaparse/gll.cljs", :end-column 16, :method-params ([this index tramp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 711, :end-line 711, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this index tramp]))}, Tramp {:num-fields 13, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name instaparse.gll/Tramp, :file "node/instaparse/gll.cljs", :end-column 17, :type true, :column 12, :internal-ctor true, :line 123, :record true, :end-line 123, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, TopListener {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 474, :column 7, :end-line 474, :end-column 18, :arglists (quote ([tramp]))}, :name instaparse.gll/TopListener, :variadic false, :file "node/instaparse/gll.cljs", :end-column 18, :method-params ([tramp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 474, :end-line 474, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tramp]))}, push-listener {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 256, :column 7, :end-line 256, :end-column 20, :arglists (quote ([tramp node-key listener])), :doc "Pushes a listener into the trampoline's node.\n   Schedules notification to listener of all existing results.\n   Initiates parse if necessary"}, :name instaparse.gll/push-listener, :variadic false, :file "node/instaparse/gll.cljs", :end-column 20, :method-params ([tramp node-key listener]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 256, :end-line 256, :max-fixed-arity 3, :fn-var true, :arglists (quote ([tramp node-key listener])), :doc "Pushes a listener into the trampoline's node.\n   Schedules notification to listener of all existing results.\n   Initiates parse if necessary"}, parses-total-after-fail {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 824, :column 7, :end-line 824, :end-column 30, :arglists (quote ([grammar start text fail-index partial? node-builder]))}, :name instaparse.gll/parses-total-after-fail, :variadic false, :file "node/instaparse/gll.cljs", :end-column 30, :method-params ([grammar start text fail-index partial? node-builder]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 824, :end-line 824, :max-fixed-arity 6, :fn-var true, :arglists (quote ([grammar start text fail-index partial? node-builder]))}, ->Segment {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 35, :column 10, :end-line 35, :end-column 17, :protocols #{cljs.core/ICounted instaparse.gll/ISegment}, :skip-protocol-flag #{cljs.core/ICounted}, :factory :positional, :arglists (quote ([text offset count]))}, :protocols #{cljs.core/ICounted instaparse.gll/ISegment}, :name instaparse.gll/->Segment, :variadic false, :file "node/instaparse/gll.cljs", :end-column 17, :method-params ([text offset count]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 35, :end-line 35, :max-fixed-arity 3, :fn-var true, :arglists (quote ([text offset count])), :skip-protocol-flag #{cljs.core/ICounted}}, lookahead-full-parse {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 740, :column 7, :end-line 740, :end-column 27, :arglists (quote ([this index tramp]))}, :name instaparse.gll/lookahead-full-parse, :variadic false, :file "node/instaparse/gll.cljs", :end-column 27, :method-params ([this index tramp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 740, :end-line 740, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this index tramp]))}, epsilon-full-parse {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 776, :column 7, :end-line 776, :end-column 25, :arglists (quote ([this index tramp]))}, :name instaparse.gll/epsilon-full-parse, :variadic false, :file "node/instaparse/gll.cljs", :end-column 25, :method-params ([this index tramp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 776, :end-line 776, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this index tramp]))}, string-case-insensitive-parse {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 505, :column 7, :end-line 505, :end-column 36, :arglists (quote ([this index tramp]))}, :name instaparse.gll/string-case-insensitive-parse, :variadic false, :file "node/instaparse/gll.cljs", :end-column 36, :method-params ([this index tramp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 505, :end-line 505, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this index tramp]))}, start-parser {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 785, :column 7, :end-line 785, :end-column 19, :arglists (quote ([tramp parser partial?]))}, :name instaparse.gll/start-parser, :variadic false, :file "node/instaparse/gll.cljs", :end-column 19, :method-params ([tramp parser partial?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 785, :end-line 785, :max-fixed-arity 3, :fn-var true, :arglists (quote ([tramp parser partial?]))}, subsegment {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 32, :column 4, :end-line 32, :end-column 14, :protocol instaparse.gll/ISegment, :doc nil, :arglists (quote ([this start-index end-index-minus-one]))}, :protocol instaparse.gll/ISegment, :name instaparse.gll/subsegment, :variadic false, :file "node/instaparse/gll.cljs", :end-column 14, :method-params ([this start-index end-index-minus-one]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 32, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this start-index end-index-minus-one])), :doc nil}, push-full-listener {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 273, :column 7, :end-line 273, :end-column 25, :arglists (quote ([tramp node-key listener])), :doc "Pushes a listener into the trampoline's node.\n   Schedules notification to listener of all existing full results."}, :name instaparse.gll/push-full-listener, :variadic false, :file "node/instaparse/gll.cljs", :end-column 25, :method-params ([tramp node-key listener]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 273, :end-line 273, :max-fixed-arity 3, :fn-var true, :arglists (quote ([tramp node-key listener])), :doc "Pushes a listener into the trampoline's node.\n   Schedules notification to listener of all existing full results."}, full-listener-exists? {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 184, :column 7, :end-line 184, :end-column 28, :arglists (quote ([tramp node-key])), :doc "Tests whether node already has a listener or full-listener"}, :name instaparse.gll/full-listener-exists?, :variadic false, :file "node/instaparse/gll.cljs", :end-column 28, :method-params ([tramp node-key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 184, :end-line 184, :max-fixed-arity 2, :fn-var true, :arglists (quote ([tramp node-key])), :doc "Tests whether node already has a listener or full-listener"}, char-range-full-parse {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 548, :column 7, :end-line 548, :end-column 28, :arglists (quote ([this index tramp]))}, :name instaparse.gll/char-range-full-parse, :variadic false, :file "node/instaparse/gll.cljs", :end-column 28, :method-params ([this index tramp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 548, :end-line 548, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this index tramp]))}, ordered-alt-full-parse {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 698, :column 7, :end-line 698, :end-column 29, :arglists (quote ([this index tramp]))}, :name instaparse.gll/ordered-alt-full-parse, :variadic false, :file "node/instaparse/gll.cljs", :end-column 29, :method-params ([this index tramp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 698, :end-line 698, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this index tramp]))}, map->Node {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 148, :column 12, :end-line 148, :end-column 16, :internal-ctor true, :factory :map, :arglists (quote ([G__16168]))}, :name instaparse.gll/map->Node, :variadic false, :file "node/instaparse/gll.cljs", :end-column 16, :method-params ([G__16168]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 148, :end-line 148, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__16168]))}, parse-total {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 862, :column 7, :end-line 862, :end-column 18, :arglists (quote ([grammar start text partial? node-builder]))}, :name instaparse.gll/parse-total, :variadic false, :file "node/instaparse/gll.cljs", :end-column 18, :method-params ([grammar start text partial? node-builder]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 862, :end-line 862, :max-fixed-arity 5, :fn-var true, :arglists (quote ([grammar start text partial? node-builder]))}, RepListener {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 447, :column 7, :end-line 447, :end-column 18, :arglists (quote ([results-so-far parser m n prev-index node-key tramp]))}, :name instaparse.gll/RepListener, :variadic false, :file "node/instaparse/gll.cljs", :end-column 18, :method-params ([results-so-far parser m n prev-index node-key tramp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 447, :end-line 447, :max-fixed-arity 7, :fn-var true, :arglists (quote ([results-so-far parser m n prev-index node-key tramp]))}, string-full-parse {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 491, :column 7, :end-line 491, :end-column 24, :arglists (quote ([this index tramp]))}, :name instaparse.gll/string-full-parse, :variadic false, :file "node/instaparse/gll.cljs", :end-column 24, :method-params ([this index tramp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 491, :end-line 491, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this index tramp]))}, safe-with-meta {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 218, :column 7, :end-line 218, :end-column 21, :arglists (quote ([obj metamap]))}, :name instaparse.gll/safe-with-meta, :variadic false, :file "node/instaparse/gll.cljs", :end-column 21, :method-params ([obj metamap]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 218, :end-line 218, :max-fixed-arity 2, :fn-var true, :arglists (quote ([obj metamap]))}, ->Tramp {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 123, :column 12, :end-line 123, :end-column 17, :internal-ctor true, :factory :positional, :arglists (quote ([grammar text segment fail-index node-builder stack next-stack generation negative-listeners msg-cache nodes success failure]))}, :name instaparse.gll/->Tramp, :variadic false, :file "node/instaparse/gll.cljs", :end-column 17, :method-params ([grammar text segment fail-index node-builder stack next-stack generation negative-listeners msg-cache nodes success failure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 123, :end-line 123, :max-fixed-arity 13, :fn-var true, :arglists (quote ([grammar text segment fail-index node-builder stack next-stack generation negative-listeners msg-cache nodes success failure]))}, make-node {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 150, :column 7, :end-line 150, :end-column 16, :arglists (quote ([]))}, :name instaparse.gll/make-node, :variadic false, :file "node/instaparse/gll.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 150, :end-line 150, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, toString {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 33, :column 4, :end-line 33, :end-column 12, :protocol instaparse.gll/ISegment, :doc nil, :arglists (quote ([this]))}, :protocol instaparse.gll/ISegment, :name instaparse.gll/toString, :variadic false, :file "node/instaparse/gll.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc nil}, build-node-with-meta {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 812, :column 7, :end-line 812, :end-column 27, :arglists (quote ([node-builder tag content start end]))}, :name instaparse.gll/build-node-with-meta, :variadic false, :file "node/instaparse/gll.cljs", :end-column 27, :method-params ([node-builder tag content start end]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 812, :end-line 812, :max-fixed-arity 5, :fn-var true, :arglists (quote ([node-builder tag content start end]))}, string-parse {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 480, :column 7, :end-line 480, :end-column 19, :arglists (quote ([this index tramp]))}, :name instaparse.gll/string-parse, :variadic false, :file "node/instaparse/gll.cljs", :end-column 19, :method-params ([this index tramp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 480, :end-line 480, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this index tramp]))}, map->Tramp {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 123, :column 12, :end-line 123, :end-column 17, :internal-ctor true, :factory :map, :arglists (quote ([G__16153]))}, :name instaparse.gll/map->Tramp, :variadic false, :file "node/instaparse/gll.cljs", :end-column 17, :method-params ([G__16153]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 123, :end-line 123, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__16153]))}, non-terminal-parse {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 725, :column 7, :end-line 725, :end-column 25, :arglists (quote ([this index tramp]))}, :name instaparse.gll/non-terminal-parse, :variadic false, :file "node/instaparse/gll.cljs", :end-column 25, :method-params ([this index tramp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 725, :end-line 725, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this index tramp]))}, -full-parse {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 82, :column 7, :end-line 82, :end-column 18, :arglists (quote ([parser index tramp]))}, :name instaparse.gll/-full-parse, :variadic false, :file "node/instaparse/gll.cljs", :end-column 18, :method-params ([parser index tramp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 82, :end-line 82, :max-fixed-arity 3, :fn-var true, :arglists (quote ([parser index tramp]))}, plus-parse {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 616, :column 8, :end-line 616, :end-column 18, :arglists (quote ([this index tramp]))}, :name instaparse.gll/plus-parse, :variadic false, :file "node/instaparse/gll.cljs", :end-column 18, :method-params ([this index tramp]), :protocol-impl nil, :arglists-meta (nil nil), :column 2, :line 616, :end-line 616, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this index tramp]))}, full-result-exists? {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 200, :column 7, :end-line 200, :end-column 26, :arglists (quote ([tramp node-key])), :doc "Tests whether node has a full-result"}, :name instaparse.gll/full-result-exists?, :variadic false, :file "node/instaparse/gll.cljs", :end-column 26, :method-params ([tramp node-key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 200, :end-line 200, :max-fixed-arity 2, :fn-var true, :arglists (quote ([tramp node-key])), :doc "Tests whether node has a full-result"}, regexp-full-parse {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 586, :column 7, :end-line 586, :end-column 24, :arglists (quote ([this index tramp]))}, :name instaparse.gll/regexp-full-parse, :variadic false, :file "node/instaparse/gll.cljs", :end-column 24, :method-params ([this index tramp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 586, :end-line 586, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this index tramp]))}, make-tramp {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 127, :column 7, :end-line 127, :end-column 17, :arglists (quote ([grammar text] [grammar text segment] [grammar text fail-index node-builder] [grammar text segment fail-index node-builder])), :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([grammar text] [grammar text segment] [grammar text fail-index node-builder] [grammar text segment fail-index node-builder]), :arglists ([grammar text] [grammar text segment] [grammar text fail-index node-builder] [grammar text segment fail-index node-builder]), :arglists-meta (nil nil nil nil)}}, :name instaparse.gll/make-tramp, :variadic false, :file "node/instaparse/gll.cljs", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([grammar text] [grammar text segment] [grammar text fail-index node-builder] [grammar text segment fail-index node-builder]), :arglists ([grammar text] [grammar text segment] [grammar text fail-index node-builder] [grammar text segment fail-index node-builder]), :arglists-meta (nil nil nil nil)}, :method-params ([grammar text] [grammar text segment] [grammar text fail-index node-builder] [grammar text segment fail-index node-builder]), :protocol-impl nil, :arglists-meta (nil nil nil nil), :column 1, :line 127, :end-line 127, :max-fixed-arity 5, :fn-var true, :arglists ([grammar text] [grammar text segment] [grammar text fail-index node-builder] [grammar text segment fail-index node-builder])}, opt-full-parse {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 717, :column 7, :end-line 717, :end-column 21, :arglists (quote ([this index tramp]))}, :name instaparse.gll/opt-full-parse, :variadic false, :file "node/instaparse/gll.cljs", :end-column 21, :method-params ([this index tramp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 717, :end-line 717, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this index tramp]))}, fail {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 298, :column 7, :end-line 298, :end-column 11, :arglists (quote ([tramp node-key index reason]))}, :name instaparse.gll/fail, :variadic false, :file "node/instaparse/gll.cljs", :end-column 11, :method-params ([tramp node-key index reason]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 298, :end-line 298, :max-fixed-arity 4, :fn-var true, :arglists (quote ([tramp node-key index reason]))}, total-success? {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 139, :column 7, :end-line 139, :end-column 21, :arglists (quote ([tramp s]))}, :name instaparse.gll/total-success?, :variadic false, :file "node/instaparse/gll.cljs", :end-column 21, :method-params ([tramp s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 139, :end-line 139, :max-fixed-arity 2, :fn-var true, :arglists (quote ([tramp s]))}, ->Node {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 148, :column 12, :end-line 148, :end-column 16, :internal-ctor true, :factory :positional, :arglists (quote ([listeners full-listeners results full-results]))}, :name instaparse.gll/->Node, :variadic false, :file "node/instaparse/gll.cljs", :end-column 16, :method-params ([listeners full-listeners results full-results]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 148, :end-line 148, :max-fixed-arity 4, :fn-var true, :arglists (quote ([listeners full-listeners results full-results]))}, re-match-at-front {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 569, :column 7, :end-line 569, :end-column 24, :arglists (quote ([regexp text]))}, :name instaparse.gll/re-match-at-front, :variadic false, :file "node/instaparse/gll.cljs", :end-column 24, :method-params ([regexp text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 569, :end-line 569, :max-fixed-arity 2, :fn-var true, :arglists (quote ([regexp text]))}, plus-full-parse {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 622, :column 8, :end-line 622, :end-column 23, :arglists (quote ([this index tramp]))}, :name instaparse.gll/plus-full-parse, :variadic false, :file "node/instaparse/gll.cljs", :end-column 23, :method-params ([this index tramp]), :protocol-impl nil, :arglists-meta (nil nil), :column 2, :line 622, :end-line 622, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this index tramp]))}, build-total-failure-node {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 817, :column 7, :end-line 817, :end-column 31, :arglists (quote ([node-builder start text]))}, :name instaparse.gll/build-total-failure-node, :variadic false, :file "node/instaparse/gll.cljs", :end-column 31, :method-params ([node-builder start text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 817, :end-line 817, :max-fixed-arity 3, :fn-var true, :arglists (quote ([node-builder start text]))}, parses-total {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 840, :column 7, :end-line 840, :end-column 19, :arglists (quote ([grammar start text partial? node-builder]))}, :name instaparse.gll/parses-total, :variadic false, :file "node/instaparse/gll.cljs", :end-column 19, :method-params ([grammar start text partial? node-builder]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 840, :end-line 840, :max-fixed-arity 5, :fn-var true, :arglists (quote ([grammar start text partial? node-builder]))}, -parse {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 59, :column 7, :end-line 59, :end-column 13, :arglists (quote ([parser index tramp]))}, :name instaparse.gll/-parse, :variadic false, :file "node/instaparse/gll.cljs", :end-column 13, :method-params ([parser index tramp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 3, :fn-var true, :arglists (quote ([parser index tramp]))}, map->Failure {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 101, :column 12, :end-line 101, :end-column 19, :internal-ctor true, :factory :map, :arglists (quote ([G__16141]))}, :name instaparse.gll/map->Failure, :variadic false, :file "node/instaparse/gll.cljs", :end-column 19, :method-params ([G__16141]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 101, :end-line 101, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__16141]))}, parse {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 800, :column 7, :end-line 800, :end-column 12, :arglists (quote ([grammar start text partial?]))}, :name instaparse.gll/parse, :variadic false, :file "node/instaparse/gll.cljs", :end-column 12, :method-params ([grammar start text partial?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 800, :end-line 800, :max-fixed-arity 4, :fn-var true, :arglists (quote ([grammar start text partial?]))}, Segment {:num-fields 3, :protocols #{cljs.core/ICounted instaparse.gll/ISegment}, :name instaparse.gll/Segment, :file "node/instaparse/gll.cljs", :end-column 17, :type true, :column 10, :line 35, :record false, :end-line 35, :skip-protocol-flag #{cljs.core/ICounted}}, merge-negative-listeners {:name instaparse.gll/merge-negative-listeners, :file "node/instaparse/gll.cljs", :line 286, :column 1, :end-line 286, :end-column 30, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 286, :column 6, :end-line 286, :end-column 30}}, star-parse {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 656, :column 8, :end-line 656, :end-column 18, :arglists (quote ([this index tramp]))}, :name instaparse.gll/star-parse, :variadic false, :file "node/instaparse/gll.cljs", :end-column 18, :method-params ([this index tramp]), :protocol-impl nil, :arglists-meta (nil nil), :column 2, :line 656, :end-line 656, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this index tramp]))}, rep-parse {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 628, :column 8, :end-line 628, :end-column 17, :arglists (quote ([this index tramp]))}, :name instaparse.gll/rep-parse, :variadic false, :file "node/instaparse/gll.cljs", :end-column 17, :method-params ([this index tramp]), :protocol-impl nil, :arglists-meta (nil nil), :column 2, :line 628, :end-line 628, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this index tramp]))}, LookListener {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 374, :column 7, :end-line 374, :end-column 19, :arglists (quote ([node-key tramp]))}, :name instaparse.gll/LookListener, :variadic false, :file "node/instaparse/gll.cljs", :end-column 19, :method-params ([node-key tramp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 374, :end-line 374, :max-fixed-arity 2, :fn-var true, :arglists (quote ([node-key tramp]))}, get-parser {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 52, :column 7, :end-line 52, :end-column 17, :arglists (quote ([grammar p]))}, :name instaparse.gll/get-parser, :variadic false, :file "node/instaparse/gll.cljs", :end-column 17, :method-params ([grammar p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 2, :fn-var true, :arglists (quote ([grammar p]))}, Node {:num-fields 4, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name instaparse.gll/Node, :file "node/instaparse/gll.cljs", :end-column 16, :type true, :column 12, :internal-ctor true, :line 148, :record true, :end-line 148, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, alt-parse {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 673, :column 7, :end-line 673, :end-column 16, :arglists (quote ([this index tramp]))}, :name instaparse.gll/alt-parse, :variadic false, :file "node/instaparse/gll.cljs", :end-column 16, :method-params ([this index tramp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 673, :end-line 673, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this index tramp]))}, CatListener {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/node/instaparse/gll.cljs", :line 384, :column 7, :end-line 384, :end-column 18, :arglists (quote ([results-so-far parser-sequence node-key tramp]))}, :name instaparse.gll/CatListener, :variadic false, :file "node/instaparse/gll.cljs", :end-column 18, :method-params ([results-so-far parser-sequence node-key tramp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 384, :end-line 384, :max-fixed-arity 4, :fn-var true, :arglists (quote ([results-so-far parser-sequence node-key tramp]))}}, :require-macros {instaparse.gll-macros instaparse.gll-macros}, :cljs.analyzer/constants {:seen #{:parser2 :full-results :end-of-string mutable :min :msg-cache :NOT :full-listeners :negative-listeners :generation :full listeners :index text :else results :lookahead :failure :instaparse.gll/end-index full-results msg-cache full-listeners :fail-index :grammar negative-listeners generation index :string failure offset :lo :expecting :instaparse/failure :hide :reason grammar :parser :regexp :parser1 :success fail-index :negative-lookahead :nodes :node-builder :keyword :result :segment :max :Epsilon :instaparse.gll/start-index :red :optional :stack reason :next-stack success :tag nodes node-builder segment count stack :parsers :listeners :char-range :hi :char next-stack :text :results}, :order [text offset count :tag :index :reason index reason :grammar :text :segment :fail-index :node-builder :stack :next-stack :generation :negative-listeners :msg-cache :nodes :success :failure grammar segment fail-index node-builder stack mutable next-stack generation negative-listeners msg-cache nodes success failure :result :listeners :full-listeners :results :full-results listeners full-listeners results full-results :hide :red :instaparse.gll/start-index :instaparse.gll/end-index :instaparse/failure :else :string :expecting :full :lo :hi :char :char-range :regexp :parsers :parser :min :max :parser1 :parser2 :optional :end-of-string :keyword :lookahead :negative-lookahead :NOT :Epsilon]}, :doc "The heart of the parsing mechanism.  Contains the trampoline structure,\n   the parsing dispatch function, the nodes where listeners are stored,\n   the different types of listeners, and the loop for executing the various\n   listeners and parse commands that are on the stack."}